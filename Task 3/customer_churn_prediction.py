# -*- coding: utf-8 -*-
"""Customer Churn Prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1c6XOAUdeHTXpDtEwOCLuCQCZt5OAIs4y
"""

import numpy as np
import pandas as pd
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from imblearn.over_sampling import SMOTE
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score
from sklearn.metrics import precision_score,recall_score,f1_score

dataset=pd.read_csv("Churn_Modelling.csv")
dataset.head()

dataset.shape

dataset.info()

dataset.isnull().sum()

dataset.describe(include='all')

dataset.columns

columns_to_drop = ['RowNumber','CustomerId','Surname']
dataset = dataset.drop(columns=columns_to_drop,axis=1)
dataset.head()

dataset['Geography'].unique()

dataset=pd.get_dummies(dataset,drop_first=True)

dataset.head()

dataset['Exited'].value_counts()

sns.countplot(dataset['Exited'])

x=dataset.drop('Exited',axis=1)
y=dataset['Exited']

x_res,y_res = SMOTE().fit_resample(x,y)
y_res.value_counts()

x_train,x_test,y_train,y_test=train_test_split(x_res,y_res,test_size=0.20,random_state=42)

sc = StandardScaler()
x_train=sc.fit_transform(x_train)
x_test=sc.fit_transform(x_test)
x_train

from sklearn.linear_model import LogisticRegression

classifier = LogisticRegression(random_state = 0)
classifier.fit(x_train, y_train)
y_pred = classifier.predict(x_test)
from sklearn.metrics import confusion_matrix

cm = confusion_matrix(y_test, y_pred)
print ("Confusion Matrix : \n", cm)

from sklearn.metrics import accuracy_score

print ("Accuracy : ", accuracy_score(y_test, y_pred))

rf = RandomForestClassifier()
rf.fit(x_train,y_train)
prediction = rf.predict(x_test)
accuracy = accuracy_score(y_test,prediction)
print('Accuracy on Testing data : ', accuracy)

precision_score(y_test,prediction)